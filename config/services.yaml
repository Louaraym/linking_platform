# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: fr

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\Service\Antispam:
        arguments:
            - 50
        calls:
#            - [ setLocale, [ %locale% ] ]
    App\TwigExtension\AntispamExtension:
        tags:
            - { name: twig.extension }
    App\DoctrineEventsListeners\ApplicationCreationListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: postPersist }
#    App\DoctrineEventsListeners\AdvertViewListener:
#        tags:
#            - { name: doctrine.event_listener, event: postLoad }
    App\Validator\AntifloodValidator:
        tags:
            - { name: validator.constraint_validator, alias: linking_platform_antiflood }
    # C'est avec l'alias qu'on retrouvera le service
    App\Form\CkeditorType:
        tags:
            - { name: form.type, alias: ckeditor }
#    App\KernelEventsListeners\BetaListener:
#        arguments:
#            - "2020-10-01"
#        tags:
#            - { name: kernel.event_listener, event: kernel.response, method: onKernelResponse }
    App\KernelEventsListeners\ControllerListener:
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }
    App\Bigbrother\MessageListener:
        arguments:
            - [ "alexandre@gmail.com", "marine@gmail.com", "pierre@gmail.com", "admin@gmail.com" ]
        tags:
            - { name: kernel.event_listener, event: linking.platform.post_message, method: onLinkingPlatformPostMessage }
